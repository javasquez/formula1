{"version":"NotebookV1","origId":12687888541959,"name":"common_functions","language":"python","commands":[{"version":"CommandV1","origId":12687888541960,"guid":"5dcd0da2-03cc-47df-9019-4abe15b7f681","subtype":"command","commandType":"auto","position":1.0,"command":"from pyspark.sql.functions import current_timestamp\n\ndef add_ingestion_date(input_df):\n    return input_df.withColumn('ingestion_date', current_timestamp())\n    ","commandVersion":19,"state":"finished","results":{"type":"listResults","data":[],"arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"metadata":{"isDbfsCommandResult":false}},"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"errorDetails":null,"baseErrorDetails":null,"workflows":[],"startTime":1673116307501,"submitTime":1673116307167,"finishTime":1673116307530,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[],"subcommandOptions":null,"contentSha256Hex":null,"nuid":"3ddce3dc-fd04-43d8-a956-fc796ef9b079"},{"version":"CommandV1","origId":12687888541961,"guid":"cdd4e0ed-d02a-4b5b-87fb-52da994e8b8d","subtype":"command","commandType":"auto","position":2.0,"command":"\ndef generateQuery (input_df, partition_column):\n    \n    column_list = []\n    for column in input_df.schema.names:\n        if column != partition_column:\n            column_list.append(column)\n    column_list.append(partition_column)\n    output_df = input_df.select(column_list)\n    return output_df","commandVersion":2,"state":"finished","results":{"type":"listResults","data":[],"arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"metadata":{"isDbfsCommandResult":false}},"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"errorDetails":null,"baseErrorDetails":null,"workflows":[],"startTime":1673116307535,"submitTime":1673116307174,"finishTime":1673116307631,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[],"subcommandOptions":null,"contentSha256Hex":null,"nuid":"226793fc-fd55-42cf-beb8-075cbc26e311"},{"version":"CommandV1","origId":296404507370987,"guid":"69a1ec2d-8095-4c20-be80-619388c27eae","subtype":"command","commandType":"auto","position":3.0,"command":"def overwritePartition(input_df, db_name, table_name, partition_column):\n    output_df = generateQuery(input_df , partition_column)\n    spark.conf.set ('spark.sql.sources.partitionOverwriteMode', 'dynamic')\n    if (spark._jsparkSession.catalog().tableExists(f'{db_name}.{table_name}')):\n        output_df.write.mode('overwrite').insertInto(f'{db_name}.{table_name}')\n    else:\n        output_df.write.mode('append').partitionBy(f'{partition_column}').format('parquet').saveAsTable(f'{db_name}.{table_name}')\n     \n    ","commandVersion":6,"state":"finished","results":{"type":"listResults","data":[],"arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"metadata":{"isDbfsCommandResult":false}},"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"errorDetails":null,"baseErrorDetails":null,"workflows":[],"startTime":1673116476568,"submitTime":1673116476252,"finishTime":1673116476683,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[],"subcommandOptions":null,"contentSha256Hex":null,"nuid":"b4f8851c-cac2-4e36-9d73-dff1ca6844e4"},{"version":"CommandV1","origId":296404507370988,"guid":"fadf0b15-5a5b-4192-b901-963fa44e9051","subtype":"command","commandType":"auto","position":4.0,"command":"def df_column_to_list(input_df, column_name):\n    df_row_list = input_df.select(column_name) \\\n                        .distinct() \\\n                        .collect()\n    column_value_list = [row[column_name] for row in df_row_list]\n    return column_value_list","commandVersion":12,"state":"finished","results":{"type":"listResults","data":[],"arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"metadata":{"isDbfsCommandResult":false}},"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"errorDetails":null,"baseErrorDetails":null,"workflows":[],"startTime":1673170940479,"submitTime":1673170940456,"finishTime":1673170940518,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[],"subcommandOptions":null,"contentSha256Hex":null,"nuid":"d310cced-5431-45b3-8b29-0bfade2e1e15"},{"version":"CommandV1","origId":538340300028368,"guid":"e14f9333-9a2a-4397-9489-7b6b3fa6cb1c","subtype":"command","commandType":"auto","position":5.0,"command":"","commandVersion":0,"state":"input","results":null,"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"errorDetails":null,"baseErrorDetails":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[],"subcommandOptions":null,"contentSha256Hex":null,"nuid":"6a5b8eb2-f9ce-435e-8971-cbfa28b13f3f"},{"version":"CommandV1","origId":3029141207068648,"guid":"6318b5ab-c229-4f1e-a8d2-a24840ac7f80","subtype":"command","commandType":"auto","position":3.5,"command":"def merge_delta_data(input_df, db_name, table_name, folder_path, merge_condition, partition_column):\n    spark.conf.set ('spark.databricks.optimizer.dynamic', 'dynamic')\n    from delta.tables import DeltaTable\n    if (spark._jsparkSession.catalog().tableExists(f'{db_name}.{table_name}')):\n        deltaTable  = DeltaTable.forPath(spark, f'{folder_path}/{table_name}')\n        deltaTable.alias('a').merge(input_df.alias('b'),merge_condition)\\\n        .whenMatchedUpdateAll()\\\n        .whenNotMatchedInsertAll()\\\n        .execute()\n    else:\n        input_df.write.mode('append').partitionBy(f'{partition_column}').format('delta').saveAsTable(f'{db_name}.{table_name}')\n     ","commandVersion":113,"state":"finished","results":{"type":"listResults","data":[],"arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[],"metadata":{"isDbfsCommandResult":false}},"resultDbfsStatus":"INLINED_IN_TREE","resultDbfsErrorMessage":null,"errorSummary":null,"errorTraceType":null,"error":null,"errorDetails":null,"baseErrorDetails":null,"workflows":[],"startTime":1673223638693,"submitTime":1673223638665,"finishTime":1673223638803,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"a user","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"metadata":{},"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"tableResultIndex":null,"listResultMetadata":[],"subcommandOptions":null,"contentSha256Hex":null,"nuid":"72b673ba-24e9-48fc-9810-5af243c6dc07"}],"dashboards":[],"guid":"1d868b70-898f-49fd-955c-23ec9bd50dcb","globalVars":{},"iPythonMetadata":null,"inputWidgets":{},"notebookMetadata":{"pythonIndentUnit":4},"reposExportFormat":"SOURCE","environmentMetadata":null}